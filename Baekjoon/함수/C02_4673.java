/* d(75) = 75+7+5 = 87. 양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), ...과 같은 무한 수열을 만들 수 있다. 
 * 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고, 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다. 
 * 33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ... n을 d(n)의 생성자라고 한다. 
 * 위의 수열에서 33은 39의 생성자이고, 39는 51의 생성자, 51은 57의 생성자이다. 생성자가 한 개보다 많은 경우도 있다. 
 * 예를 들어, 101은 생성자가 2개(91과 100) 있다. 생성자가 없는 숫자를 셀프 넘버라고 한다. 100보다 작은 셀프 넘버는 총 13개가 있다. 
 * 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97. 10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.*/

public class C02_4673 {
	/* 생성자를 구하는 함수 */
	public static int d(int num) {	
		int sum = num;	//ex)1234
		
		while(num != 0) {
			//입력값에 1의 자리수만 가져와서 더함 ex) 1234 -> 4더해서 1238 -> 3더해서 1241 -> 2더해서 1243 -> 1더헤서 1244
			sum += num % 10;
			//입력값을 10의 자리만큼씩 없앰 ex) 1234 -> 123 -> 12 -> 1 -> 0
			num = num/10;		
		}
		
		return sum;		//1244는 생성자가 1234이고, 생성자가 있는 수
	}
	
	/* 출력할 숫자 분별하는 작업을 하는 메인 */
	public static void main(String[] args) {
		/* 생성자가 있는 숫자들을 result배열에 넣어 true, false 구분 -> 안넘어온 수는 셀프넘버 */
		boolean[] result = new boolean[10001];
		
		for(int i = 1; i < 10001; i++) {
			int n = d(i);	//1~10000까지의 숫자를 위에 만들어 놓은 함수에서 계산해옴 -> 함수에서 나온 sum값이 n에 들어감
			/* 일치하는 인덱스를 체크 -> 생성자가 있는 숫자를 체크 */
			if(n <= 10000) {
				result[n] = true;
			}
		}
		
		for(int i = 1; i < 10001; i++) {
			/* 1~10000까지 숫자 중 인덱스 체크가 안돼있는 숫자는 셀프넘버이므로 출력 */
			if(!result[i]) {
				System.out.println(i);	
			}
		}
	}

}
